{"version":3,"sources":["Bot.js","Multiplayer.js","Header.js","Main.js","index.js"],"names":["Square","props","className","style","winner","onClick","value","Board","eachSquare","r","squares","position","s","push","renderSquare","key","i","this","includes","backgroundColor","row","Component","Game","state","history","Array","fill","stepNumber","xIsNext","location","weight","toggleSort","calculateWinner","k","lines","length","a","b","c","setState","player","handleClick","slice","x","Math","floor","random","console","log","concat","jumpTo","step","status","current","moves","map","move","desc","column","fontWeight","display","marginLeft","marginTop","reverse","Bot","startGame","handleChange","e","target","alert","ActivateStartGame","textAlign","fontSize","htmlFor","onKeyPress","onChange","id","type","required","names","player1","player2","Multiplayer","handleChange1","handleChange2","Header","children","margin","marginBottom","to","Main","ReactDOM","render","createBrowserHistory","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.49a8eb8f.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\n  function Square(props){\r\n    return(\r\n      <button className=\"square\" style={props.winner}\r\n        onClick={props.onClick}>\r\n          {props.value}\r\n        </button>\r\n    );\r\n  }\r\n  \r\n  class Board extends Component {\r\n\r\n    renderSquare(i) {\r\n      return <Square key={i}\r\n      onClick={() => this.props.onClick(i)}\r\n      winner={this.props.winner.includes(i)? {backgroundColor: \"#00ff00\"}: {}}\r\n      value={this.props.squares[i]}\r\n      />;\r\n    }\r\n  \r\n    eachSquare = r => {\r\n\r\n      let squares = [];\r\n      let position = r * 3;\r\n      for(let s=0; s<3;s++){\r\n        squares.push(\r\n          this.renderSquare(s + position)\r\n        );\r\n      }\r\n\r\n      return(\r\n        <div key={r} className=\"board-row\">\r\n          {squares}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    render() {\r\n\r\n      const row = [];\r\n\r\n      for(let r=0;r<3;r++){\r\n        row.push(\r\n          this.eachSquare(r)\r\n        );\r\n      }\r\n\r\n      return(\r\n      <div>{row}</div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Game extends Component {\r\n\r\n    state={\r\n      history:[{\r\n        squares: Array(9).fill(null),\r\n      }],\r\n      stepNumber: 0,\r\n      xIsNext:true,\r\n      location: [],\r\n      weight: 900,\r\n      toggleSort: true,\r\n      winner: [],\r\n    };\r\n\r\n    calculateWinner = (squares,k) => {\r\n      const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n      ];\r\n      for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n\r\n          if(k===1){\r\n            this.setState({\r\n              winner: lines[i],\r\n            });\r\n          }\r\n          \r\n          return squares[a] === 'X' ? this.props.player : \"Bot\";\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n\r\n    handleClick = i => {\r\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n      const location = this.state.location.slice(0, this.state.stepNumber);\r\n      const current = history[history.length - 1];\r\n      const squares = current.squares.slice();\r\n\r\n      if (this.calculateWinner(squares,1) || squares[i]) {\r\n        return;\r\n      }\r\n\r\n      squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n\r\n      this.setState({\r\n        xIsNext: !this.state.xIsNext,\r\n      },() => {\r\n        if(this.calculateWinner(squares,1)){\r\n          return;\r\n        }\r\n        while(true){\r\n        let x = Math.floor((Math.random() * 8));\r\n        if(!squares[x]){\r\n          console.log(this.state.xIsNext);\r\n          squares[x] = this.state.xIsNext ? \"X\" : \"O\";\r\n          this.setState({\r\n            xIsNext: !this.state.xIsNext\r\n          });\r\n          break;\r\n        }\r\n      }\r\n    });     \r\n    \r\n      this.setState({\r\n        history: history.concat([\r\n          {\r\n            squares: squares\r\n          }\r\n        ]),\r\n        stepNumber: history.length,\r\n        location: location.concat([i]),\r\n      },() => {this.calculateWinner(this.state.history[history.length].squares,1);});\r\n    }\r\n  \r\n    jumpTo = step => {\r\n      this.setState({\r\n        stepNumber: step,\r\n        xIsNext: (step % 2) === 0,\r\n      });\r\n\r\n      if(step === this.state.history.length-1){\r\n        this.calculateWinner(this.state.history[this.state.history.length-1].squares,1);\r\n      }\r\n      else{\r\n        this.setState({\r\n          winner: [],\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    render() {\r\n      const history = this.state.history;\r\n      const current = history[this.state.stepNumber];\r\n      const winner = this.calculateWinner(current.squares,0);\r\n\r\n      const moves = history.map( (step, move) => {\r\n        const desc = move ? 'Go to move #' + move :\r\n        'Go to game start';\r\n\r\n      const row = move ? \"(\" + Math.floor(this.state.location[move-1] / 3) + \",\" : '(NaN,';\r\n      const column = move ? this.state.location[move-1] % 3 + \")\" : 'NaN)';\r\n\r\n      const weight = this.state.stepNumber === move ? 900 : 100;\r\n\r\n      /* let position = null;\r\n      if(move === 0){\r\n      }\r\n      else if(move % 2 === 0){\r\n        position = \"O\";\r\n      }\r\n      else{\r\n        position = \"X\";\r\n      } */\r\n\r\n        return(\r\n            <li key={move}>\r\n      <button style={{fontWeight: weight}} onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        <p style={{display: \"inline-block\", marginLeft: \"10px\"}}>Location: {this.props.player} {row}{column}</p>\r\n          </li>\r\n        );\r\n      });\r\n\r\n      let status;\r\n      if(winner){\r\n        status = 'Winner: '+ winner;\r\n      }\r\n      else if(this.state.stepNumber === 9){\r\n        status = 'Draw';\r\n      }\r\n      else{\r\n        status = 'Next player: '+ (this.state.xIsNext ? this.props.player: 'O');\r\n      }\r\n      \r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board \r\n            winner={this.state.winner}\r\n            squares={current.squares}\r\n            onClick={this.handleClick}\r\n            />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{status}</div>\r\n            <button style={{marginTop: 5}} onClick={ () => this.setState({ toggleSort: !this.state.toggleSort}) }>Sort</button>\r\n            <ol>{this.state.toggleSort?moves:moves.reverse()}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n\r\nclass Bot extends Component{\r\n\r\n  state={\r\n    startGame: false,\r\n    player: ''\r\n  }\r\n\r\n  handleChange = e =>{\r\n    this.setState({player: e.target.value})\r\n  }\r\n\r\n  startGame = () =>{\r\n    if(this.state.player.length > 0){\r\n      this.setState({startGame: true})\r\n    }\r\n    else{\r\n      alert(\"UserName Required\")\r\n    }\r\n  }\r\n\r\n\r\n  ActivateStartGame = e =>{\r\n    if(e.key === 'Enter'){\r\n      this.startGame();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render(){\r\n    const style={\r\n      textAlign: 'center',\r\n      fontSize: '4vh',\r\n      fontWeight: 'bold'\r\n    }\r\n\r\n    return(\r\n      <div>\r\n      <div style={style}>\r\n        Against Bot \r\n      </div>\r\n      {\r\n        this.state.startGame ?\r\n        <div>\r\n          <button className=\"change_name\" onClick={() =>this.setState({startGame: false})}>Change UserName</button>\r\n          <Game player={this.state.player} />\r\n        </div> :\r\n        <div className=\"input-box\">\r\n      <div className=\"player1-input\">\r\n        <label htmlFor=\"player1\">Player's UserName</label>\r\n        <input onKeyPress={this.ActivateStartGame} onChange={this.handleChange} id=\"player1\" type=\"text\" value={this.state.player} required />\r\n      </div>\r\n      <div>\r\n        <button onClick={this.startGame} style={{marginTop: \"1em\"}} type=\"submit\">START</button>\r\n      </div>\r\n    </div>\r\n      }        \r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Bot;","import React, {Component} from 'react';\r\n\r\n\r\n  function Square(props){\r\n    return(\r\n      <button className=\"square\" style={props.winner}\r\n        onClick={props.onClick}>\r\n          {props.value}\r\n        </button>\r\n    );\r\n  }\r\n  \r\n  class Board extends Component {\r\n\r\n    renderSquare(i) {\r\n      return <Square key={i}\r\n      onClick={() => this.props.onClick(i)}\r\n      winner={this.props.winner.includes(i)? {backgroundColor: \"#00ff00\"}: {}}\r\n      value={this.props.squares[i]}\r\n      />;\r\n    }\r\n  \r\n    eachSquare = r => {\r\n\r\n      let squares = [];\r\n      let position = r * 3;\r\n      for(let s=0; s<3;s++){\r\n        squares.push(\r\n          this.renderSquare(s + position)\r\n        );\r\n      }\r\n\r\n      return(\r\n        <div key={r} className=\"board-row\">\r\n          {squares}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    render() {\r\n\r\n      const row = [];\r\n\r\n      for(let r=0;r<3;r++){\r\n        row.push(\r\n          this.eachSquare(r)\r\n        );\r\n      }\r\n\r\n      return(\r\n      <div>{row}</div>\r\n      );\r\n    }\r\n  }\r\n  \r\nclass Game extends Component {\r\n\r\n    state={\r\n      history:[{\r\n        squares: Array(9).fill(null),\r\n      }],\r\n      stepNumber: 0,\r\n      xIsNext:true,\r\n      location: [],\r\n      weight: 900,\r\n      toggleSort: true,\r\n      winner: [],\r\n    };\r\n\r\n    calculateWinner = (squares,k) => {\r\n      const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n      ];\r\n      for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n\r\n          if(k===1){\r\n            this.setState({\r\n              winner: lines[i],\r\n            });\r\n          }\r\n          \r\n          return squares[a] === \"X\" ? this.props.names.player1 : this.props.names.player2;\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n\r\n    handleClick = i => {\r\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n      const location = this.state.location.slice(0, this.state.stepNumber);\r\n      const current = history[history.length - 1];\r\n      const squares = current.squares.slice();\r\n\r\n      if (this.calculateWinner(squares,1) || squares[i]) {\r\n        return;\r\n      }\r\n      squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n      this.setState({\r\n        history: history.concat([\r\n          {\r\n            squares: squares\r\n          }\r\n        ]),\r\n        stepNumber: history.length,\r\n        xIsNext: !this.state.xIsNext,\r\n        location: location.concat([i]),\r\n      },() => {this.calculateWinner(this.state.history[history.length].squares,1);});\r\n    }\r\n  \r\n    jumpTo = step => {\r\n      this.setState({\r\n        stepNumber: step,\r\n        xIsNext: (step % 2) === 0,\r\n      });\r\n\r\n      if(step === this.state.history.length-1){\r\n        this.calculateWinner(this.state.history[this.state.history.length-1].squares,1);\r\n      }\r\n      else{\r\n        this.setState({\r\n          winner: [],\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    render() {\r\n      const history = this.state.history;\r\n      const current = history[this.state.stepNumber];\r\n      const winner = this.calculateWinner(current.squares,0);\r\n\r\n      const moves = history.map( (step, move) => {\r\n        const desc = move ? 'Go to move #' + move :\r\n        'Go to game start';\r\n\r\n      const row = move ? \"(\" + Math.floor(this.state.location[move-1] / 3) + \",\" : '(NaN,';\r\n      const column = move ? this.state.location[move-1] % 3 + \")\" : 'NaN)';\r\n\r\n      const weight = this.state.stepNumber === move ? 900 : 100;\r\n\r\n      let position = null;\r\n      if(move === 0){\r\n      }\r\n      else if(move % 2 === 0){\r\n        position = this.props.names.player2;\r\n      }\r\n      else{\r\n        position = this.props.names.player1;\r\n      }\r\n\r\n        return(\r\n            <li key={move}>\r\n      <button style={{fontWeight: weight}} onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        <p style={{display: \"inline-block\", marginLeft: \"10px\"}}>Location: {position} {row}{column}</p>\r\n          </li>\r\n        );\r\n      });\r\n\r\n      let status;\r\n      if(winner){\r\n        status = 'Winner: '+ winner;\r\n      }\r\n      else if(this.state.stepNumber === 9){\r\n        status = 'Draw';\r\n      }\r\n      else{\r\n        status = 'Next player: '+ (this.state.xIsNext ? this.props.names.player1: this.props.names.player2);\r\n      }\r\n\r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board \r\n            winner={this.state.winner}\r\n            squares={current.squares}\r\n            onClick={this.handleClick}\r\n            />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{status}</div>\r\n            <button style={{marginTop: 5}} onClick={ () => this.setState({ toggleSort: !this.state.toggleSort}) }>Sort</button>\r\n            <ol>{this.state.toggleSort?moves:moves.reverse()}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  class Multiplayer extends Component{\r\n    \r\n    state = {\r\n      startGame: false,\r\n      names: {\r\n          player1: '',\r\n          player2: ''\r\n        }\r\n    }\r\n    \r\n    handleChange1 = e =>{\r\n      this.setState({\r\n        names: {\r\n          ...this.state.names,\r\n          player1: e.target.value\r\n        }\r\n      })\r\n    }\r\n\r\n    handleChange2 = e =>{\r\n      this.setState({\r\n        names: {\r\n          ...this.state.names,\r\n          player2: e.target.value\r\n        }\r\n      })\r\n    }\r\n\r\n    startGame = () =>{\r\n      if(this.state.names.player1.length && this.state.names.player2.length > 0)\r\n      {\r\n        this.setState({startGame: true})\r\n      }\r\n      else{\r\n        alert(\"Username Required\")\r\n      }\r\n\r\n    }\r\n\r\n    ActivateStartGame = e =>{\r\n      if(e.key === 'Enter'){\r\n        this.startGame();\r\n      }\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n      \r\n      const style={\r\n        textAlign: 'center',\r\n        fontSize: '4vh',\r\n        fontWeight: 'bold'\r\n      }\r\n\r\n      return(\r\n        <div>\r\n          <div style={style}>\r\n            Multiplayer\r\n          </div>\r\n          {\r\n            this.state.startGame ?\r\n            <div>\r\n              <button className=\"change_name\" onClick={() =>this.setState({startGame: false})}>Change UserName</button>\r\n              <Game names={this.state.names} />\r\n            </div>\r\n             :\r\n            <div className=\"input-box\">\r\n          <div className=\"player1-input\">\r\n            <label htmlFor=\"player1\">First Player's UserName</label>\r\n            <input onKeyPress={this.ActivateStartGame} onChange={this.handleChange1} id=\"player1\" type=\"text\" value={this.state.names.player1} required />\r\n          </div>\r\n          <div className=\"player2-input\">\r\n            <label htmlFor=\"player2\">Second Player's UserName</label>\r\n            <input onKeyPress={this.ActivateStartGame} onChange={this.handleChange2} id=\"player2\" type=\"text\" value={this.state.names.player2} required />\r\n          </div>\r\n          <div>\r\n            <button onClick={this.startGame} type=\"submit\">START</button>\r\n          </div>\r\n        </div>\r\n          }        \r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n\r\n  export default Multiplayer;","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst Header = ({children}) => {\r\n\r\n    const style = {\r\n        display: 'inline-block',\r\n        margin: \"10px 20px\",\r\n        marginBottom: \"1.5em\" ,\r\n        fontSize: \"4vh\"\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <Link to='/tic-tac-toe'>Back Home</Link>\r\n            <div style={{textAlign: \"center\"}}>\r\n                <h3 style={style}><Link to='/multiplayer'>Multiplayer</Link></h3>\r\n                <h3 style={style}><Link to='/bot'>Play Against Bot</Link></h3>\r\n            </div>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst Main = () =>{\r\n\r\n    return(\r\n        <div className=\"link-box-container\">\r\n            <Link to='/multiplayer' className=\"link-box-text\"><div id=\"multi\" className=\"link-box\">Multiplayer</div></Link>\r\n            <Link to='/bot' className=\"link-box-text\"><div className=\"link-box\">Play Against Bot</div></Link>\r\n        </div>\r\n    )   \r\n}\r\n\r\n\r\nexport default Main","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Bot from './Bot';\nimport Multiplayer from './Multiplayer';\nimport {Router, Switch, Route} from 'react-router-dom';\nimport {createBrowserHistory} from 'history';\nimport Header from './Header';\nimport Main from './Main';\n  \n  ReactDOM.render(\n    <Router history={createBrowserHistory()}>\n      <Switch>\n        <Route exact path='/tic-tac-toe' component={Main}/>\n        <Route path='/bot' render={()=> <Header><Bot/></Header> } />\n        <Route path='/multiplayer' render={()=> <Header><Multiplayer/></Header> } />\n      </Switch>\n    </Router>,\n    document.getElementById('root')\n  );\n  \n"],"sourceRoot":""}